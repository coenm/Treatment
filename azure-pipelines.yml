trigger:
- develop
- feature/*

pool:
  vmImage: 'windows-latest'

variables:
  - name: DOTNET_CLI_TELEMETRY_OPTOUT
    value: 1
  - name: solution
    value: '**/*.sln'
  - name: buildPlatform
    value: 'x64'
  - name: buildConfiguration
    value: 'Release'
  - group: ExternalToolsInfo

steps:

# Install gitversion as a dotnet tool.
- task: DotNetCoreCLI@2
  displayName: 'Install gitversion as dotnet tool'
  inputs:
    command: custom
    custom: tool
    arguments: 'install GitVersion.Tool --version $(GITVERSION_VERSION) --tool-path $(Build.SourcesDirectory)/tools'

# Run gitversion to determine a version number and make them available as environment variables.
- task: CmdLine@1
  displayName: 'Run gitversion'
  inputs:
    filename: '$(Build.SourcesDirectory)/tools/dotnet-gitversion'
    arguments: '/output buildserver'

- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  displayName: 'Run unittests'
  inputs:
    testAssemblyVer2: |
     !**\bin\$(buildPlatform)\$(buildConfiguration)\Treatment.TestAutomation.TestRunner.dll
     **\bin\$(buildPlatform)\$(buildConfiguration)\*.Tests.dll
     !**\obj\**
     
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'